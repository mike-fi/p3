[project]
authors = [
    {name = "mk.fshr"},
]
requires-python = ">=3.11"
dependencies = [
    "pyspark[connect]<4.0.0,>=3.5.1",
    "pytest>=8.0.0",
    "setuptools>=75.8.0",
]
name = "pytest-pyspark-plugin"
version = "0.1.0"
description = "Pytest pyspark plugin (p3)"
readme = "README.md"
classifiers = [
    "Framework :: Pytest",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.entry-points.pytest11]
p3 = "plugin"

[tool.uv]
dev-dependencies = [
    "ruff<1.0,>=0.5",
    "pytest-cov<5.0.0,>=4.0.0",
    "bandit<2.0.0,>=1.7.6",
    "mypy<2.0.0,>=1.7.1",
    "pre-commit<4.0.0,>=3.8.0",
]

[tool.hatch.build.targets.wheel]
only-include = ["p3"]
sources = ["p3"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "--cov p3 --cov-report term-missing --cov-report html --cov-report xml --no-cov-on-fail --verbose"
testpaths = [
    "tests",
]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true
exclude = [
    "build",
    "dist",
    ".eggs",
]

[tool.ruff.lint]
ignore = [
    "N801", # class names should use CapWords convention (class names)
    "N812", # lowercase imported as non-lowercase (pyspark.sql functions as F)
    "N818"  # Exception name should have Error suffix
]

select = [
    "E",
    "F",
    "N",
    "W",
    "I001", # isort configuration for ruff "--profile", "black"
]
# docstring convention configured to google with exception to omit docstrings
extend-select = ["D"]
extend-ignore = [
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "D417", # Missing argument description in the docstring
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107" # Missing docstring in __init__
]

[tool.pyright]
# ...
venvPath = "."
venv = ".venv"


[tool.bandit]
skips = ["B601", "B608", "B101"] # B101 asserts used


[tool.ruff.lint.isort.sections]
typing = ["typing"]


[tool.ruff.lint.isort]
no-lines-before = ["future", "standard-library", "third-party", "first-party", "local-folder", "typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder", "typing"]
